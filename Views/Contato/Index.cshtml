@{
    ViewData["Title"] = "Contatos";
}

<div class="text-center row d-flex">
    <h1 class="display-4 col-10">Contatos</h1>
    <a asp-controller="Contato" asp-action="Criar" class="btn btn-success col-2" style="height: 50px; margin-top: 20px">Criar</a>
</div>

<div>
    <label>Pesquisar</label>
    <input type="text" id="pesquisa" class="form-control" onkeyup="carregarContatos()" />
</div>

<table class="table mt-4" id="tabela-contatos">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Telefone Pessoal</th>
            <th>Telefone Comercial</th>
            <th>Empresa</th>
            <th>Emails</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @* aqui é possível utilizar um foreach e usar asp-action e asp-route-id pra poder redirecionar conforme a necessidade *@
        @* mas a proposta é utilizar o ajax pra trazer os dados e popular a tabela *@
    </tbody>
</table>

@section Scripts {
    <script>
        // foi utilizada ajax somente na página de index já que é onde são carregados todos os dados então achei que
        //  seria mais interessante o uso do ajax aqui

        const PATHLISTAR = '/contato/listar';
        const PATHEXCLUIR = '/contato/excluir';

        // Função para carregar e exibir os contatos
        const carregarContatos = async() => {
            const config = {
                method: "GET",
                headers: { "Content-Type": "application/json" },
            };

            try {
                const termo = document.getElementById('pesquisa').value.toLowerCase();
                const response = await fetch(`${PATHLISTAR}?filtro=${termo}`, config);
                    
                if (!response.ok) 
                    throw new Error(`Erro HTTP: ${response.status}`);
                
                const dados = await response.json();
                preencherTabela(dados);
                return dados;
            }
            catch (err) {
                console.error('Erro ao carregar contatos:', err);
            }
        }

        // Função para preencher a tabela com os dados
        const preencherTabela = (contatos) => {
            // pega o componente tbody filho do componente que tem o id tabela-contatos
            const tbody = document.querySelector('#tabela-contatos tbody');
            // limpa o conteúdo do tbody caso tenha
            tbody.innerHTML = '';

            contatos.forEach(contato => {
                // cria o elemento tr para ser populado
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${contato.nome || ''}</td>
                    <td>${contato.telefonePessoal || ''}</td>
                    <td>${contato.telefoneComercial || ''}</td>
                    <td>${contato.empresa || ''}</td>
                    <td>${contato.emails ? contato.emails.replaceAll(';', '<br/>') : ''}</td>
                    <td>
                        <a class="btn btn-warning btn-sm" href="/contato/editar/${contato.id}">
                            <i class="bi bi-pencil"></i>
                        </a>
                        <button class="btn btn-danger btn-sm" onclick="excluirContato(${contato.id})">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>
                `;
                tbody.appendChild(row);
            });
        }

        // Função para excluir contato
        const excluirContato = async(id) => {
            if (confirm('Deseja realmente excluir este contato?')){
                const config = {
                    method: "DELETE",
                    headers: { "Content-Type": "application/json" },
                };

                try {
                    const termo = document.getElementById('pesquisa').value.toLowerCase();
                    const response = await fetch(`${PATHEXCLUIR}/${id}`, config);

                    if (!response.ok)
                        throw new Error(`Erro HTTP: ${response.status}`);

                    carregarContatos();
                }
                catch (err) {
                    console.error('Erro:', error);
                    alert('Erro ao excluir o contato.');
                }
            }
        }

        // carrega os contatos quando o conteúdo da dom é carregado
        document.addEventListener('DOMContentLoaded', carregarContatos);
    </script>
}